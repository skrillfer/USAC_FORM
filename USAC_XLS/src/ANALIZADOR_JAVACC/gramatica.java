/* Generated By:JavaCC: Do not edit this line. gramatica.java */
package ANALIZADOR_JAVACC;
import Estructuras.*;
import java.util.*;
public class gramatica implements gramaticaConstants {
    static String code="";
    static int index=1;

    public String  initParser() throws ParseException, TokenMgrError
    {
        return (inicio_PrincipalEncuesta());
    }

    public static void agregarCadena(String cadena){
        code += cadena;
    }

//**************************DECLARACION SINTACTICA******************************

//*********************Para LIBRO DE ENCUESTA***********************************
  final public String inicio_PrincipalEncuesta() throws ParseException {
    label_1:
    while (true) {
      Pregunta();
      if (jj_2_1(2)) {
        ;
      } else {
        break label_1;
      }
    }
                     {if (true) return "";}
    throw new Error("Missing return statement in function");
  }

  final public String Pregunta() throws ParseException {
    jj_consume_token(PREGUNTA_OPEN);
    AtrS_Basic_Encuesta();
                                              {if (true) return "talega";}
    throw new Error("Missing return statement in function");
  }

  final public String AtrS_Basic_Encuesta() throws ParseException {
    label_2:
    while (true) {
      if (jj_2_2(2)) {
        ;
      } else {
        break label_2;
      }
      Atr_BasicoEncuesta();
      jj_consume_token(SEPARADOR);
      Valores();
      jj_consume_token(SEPARADOR);
      jj_consume_token(SEPARADOR);
      Atr_BasicoEncuesta();
    }
    jj_consume_token(PREGUNTA_CLOSE);
                                                                                                                      {if (true) return "";}
    throw new Error("Missing return statement in function");
  }

  final public String Atr_BasicoEncuesta() throws ParseException {
                              Token tk1=null;
    if (jj_2_3(2)) {
      tk1 = jj_consume_token(TIPO);
    } else if (jj_2_4(2)) {
      tk1 = jj_consume_token(IDPREGUNTA);
    } else if (jj_2_5(2)) {
      tk1 = jj_consume_token(ETIQUETA);
    } else if (jj_2_6(2)) {
      tk1 = jj_consume_token(SUGERIR);
    } else if (jj_2_7(2)) {
      tk1 = jj_consume_token(CODIGO_PRE);
    } else if (jj_2_8(2)) {
      tk1 = jj_consume_token(CODIGO_POST);
    } else if (jj_2_9(2)) {
      tk1 = jj_consume_token(RESTRINGIR);
    } else if (jj_2_10(2)) {
      tk1 = jj_consume_token(RESTRINGIRMSN);
    } else if (jj_2_11(2)) {
      tk1 = jj_consume_token(REQUERIDO);
    } else if (jj_2_12(2)) {
      tk1 = jj_consume_token(REQUERIDOMSN);
    } else if (jj_2_13(2)) {
      tk1 = jj_consume_token(PREDETERMINADO);
    } else if (jj_2_14(2)) {
      tk1 = jj_consume_token(APLICABLE);
    } else if (jj_2_15(2)) {
      tk1 = jj_consume_token(LECTURA);
    } else if (jj_2_16(2)) {
      tk1 = jj_consume_token(CALCULO);
    } else if (jj_2_17(2)) {
      tk1 = jj_consume_token(REPETICION);
    } else if (jj_2_18(2)) {
      tk1 = jj_consume_token(MULTIMEDIA);
    } else if (jj_2_19(2)) {
      tk1 = jj_consume_token(APARIENCIA);
    } else if (jj_2_20(2)) {
      tk1 = jj_consume_token(PARAMETRO);
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
                       {if (true) return tk1.image;}
    throw new Error("Missing return statement in function");
  }

/*String inicio_Principal():{} 
{
    <MENQ> <PREGUNTA> <MAYQ>  atributosBasicos(){return "talega";}
}

void atributosBasicos():{}
{
    (<MENQ> atributoBasico() <MAYQ> Valores() <MENQ><DIV> atributoBasico() <MAYQ> )* <MENQ> <DIV> <PREGUNTA> <MAYQ>
}
*/
  final public void Valores() throws ParseException {
    if (jj_2_21(2)) {
      lista_id();

    } else if (jj_2_22(2)) {
      Log_E();
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void lista_id() throws ParseException {
    label_3:
    while (true) {
      if (jj_2_23(2)) {
        aceptoID();
      } else if (jj_2_24(2)) {
        jj_consume_token(CHA_R);
      } else if (jj_2_25(2)) {
        aceptoString();
      } else {
        jj_consume_token(-1);
        throw new ParseException();
      }
      if (jj_2_26(2)) {
        ;
      } else {
        break label_3;
      }
    }
  }

  final public String aceptoID() throws ParseException {
                   Token tk1=null;
    tk1 = jj_consume_token(ID);
              {if (true) return tk1.image;}
    throw new Error("Missing return statement in function");
  }

  final public String aceptoString() throws ParseException {
                       Token tk1=null;
    tk1 = jj_consume_token(STRING);
                  {if (true) return tk1.image;}
    throw new Error("Missing return statement in function");
  }

  final public String aceptoNumero() throws ParseException {
                       Token tk1=null;
    tk1 = jj_consume_token(NUMBER);
                   {if (true) return tk1.image;}
    throw new Error("Missing return statement in function");
  }

  final public String aceptoBooleano() throws ParseException {
                         Token tk1=null;
    tk1 = jj_consume_token(BOOLEAN_LITERAL);
                            {if (true) return tk1.image;}
    throw new Error("Missing return statement in function");
  }

  final public String aceptoFecha() throws ParseException {
                      Token tk1,tk2,tk3=null;
    tk1 = jj_consume_token(NUMBER);
    jj_consume_token(DIV);
    tk2 = jj_consume_token(NUMBER);
    jj_consume_token(DIV);
    tk3 = jj_consume_token(NUMBER);
                                                        {if (true) return tk1.image+"/"+tk2.image+"/"+tk3.image;}
    throw new Error("Missing return statement in function");
  }

  final public void atributoBasico() throws ParseException {
    if (jj_2_27(2)) {
      jj_consume_token(TIPO);
    } else if (jj_2_28(2)) {
      jj_consume_token(IDPREGUNTA);
    } else if (jj_2_29(2)) {
      jj_consume_token(ETIQUETA);
    } else if (jj_2_30(2)) {
      jj_consume_token(SUGERIR);
    } else if (jj_2_31(2)) {
      jj_consume_token(CODIGO_PRE);
    } else if (jj_2_32(2)) {
      jj_consume_token(CODIGO_POST);
    } else if (jj_2_33(2)) {
      jj_consume_token(RESTRINGIR);
    } else if (jj_2_34(2)) {
      jj_consume_token(RESTRINGIRMSN);
    } else if (jj_2_35(2)) {
      jj_consume_token(REQUERIDO);
    } else if (jj_2_36(2)) {
      jj_consume_token(REQUERIDOMSN);
    } else if (jj_2_37(2)) {
      jj_consume_token(PREDETERMINADO);
    } else if (jj_2_38(2)) {
      jj_consume_token(APLICABLE);
    } else if (jj_2_39(2)) {
      jj_consume_token(LECTURA);
    } else if (jj_2_40(2)) {
      jj_consume_token(CALCULO);
    } else if (jj_2_41(2)) {
      jj_consume_token(REPETICION);
    } else if (jj_2_42(2)) {
      jj_consume_token(MULTIMEDIA);
    } else if (jj_2_43(2)) {
      jj_consume_token(APARIENCIA);
    } else if (jj_2_44(2)) {
      jj_consume_token(PARAMETRO);
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public String Log_E() throws ParseException {
    String n1,n2,datax="";
    n1 = Log_F();
    label_4:
    while (true) {
      if (jj_2_45(2)) {
        ;
      } else {
        break label_4;
      }
      jj_consume_token(OR);
      n2 = Log_E();
                                  datax+=n1+"||"+n2;
    }
        if(datax==""){
            {if (true) return n1;}
        }else{
            {if (true) return datax;}
        }
    throw new Error("Missing return statement in function");
  }

//_____________________________________________________________________________
  final public String Log_F() throws ParseException {
    String n1,n2,datax="";
    n1 = Log_T();
    label_5:
    while (true) {
      if (jj_2_46(2)) {
        ;
      } else {
        break label_5;
      }
      jj_consume_token(AND);
      n2 = Log_F();
                                    datax+=n1+"&&"+n2;
    }
        if(datax==""){
            {if (true) return n1;}
        }else{
            {if (true) return datax;}
        }
    throw new Error("Missing return statement in function");
  }

//______________________________________________________________________________
  final public String Log_T() throws ParseException {
    String datax="";
    String n1="";
    if (jj_2_47(2)) {
      jj_consume_token(NOT);
      n1 = Log_E();
                        datax+="!"+n1;
    } else if (jj_2_48(2)) {
      n1 = Relacional();
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
        if(datax==""){
            {if (true) return n1;}
        }else{
            {if (true) return datax;}
        }
    throw new Error("Missing return statement in function");
  }

//______________________________________________________________________________
  final public String Relacional() throws ParseException {
    String str1; String n1; String n2;
    String datax="";
    n1 = expr();
    if (jj_2_49(2)) {
      str1 = OpRel();
      n2 = expr();
                                    datax+=n1+str1+n2;
    } else {
      ;
    }
        if(datax==""){
            {if (true) return n1;}
        }else{
            {if (true) return datax;}
        }
    throw new Error("Missing return statement in function");
  }

//______________________________________________________________________________
  final public String OpRel() throws ParseException {
 String op="";
    if (jj_2_50(2)) {
      jj_consume_token(IG_IG);
              op="==";
    } else if (jj_2_51(2)) {
      jj_consume_token(DIF);
                               op="!";
    } else if (jj_2_52(2)) {
      jj_consume_token(MENQ);
                                               op="<";
    } else if (jj_2_53(2)) {
      jj_consume_token(MENIQ);
                                                                op="<=";
    } else if (jj_2_54(2)) {
      jj_consume_token(MAYQ);
                                                                                 op=">";
    } else if (jj_2_55(2)) {
      jj_consume_token(MAYIQ);
                                                                                                  op=">=";
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
                                                                                                              {if (true) return op;}
    throw new Error("Missing return statement in function");
  }

//_____________________________Expresion Aritmetica_____________________________
  final public String expr() throws ParseException {
    String n1;
    String n2;
    String datax="";
    n1 = ATT();
    label_6:
    while (true) {
      if (jj_2_56(2)) {
        ;
      } else {
        break label_6;
      }
      if (jj_2_57(2)) {
        jj_consume_token(MAS);
        n2 = expr();
                                    datax+=n1+"+"+n2;
      } else if (jj_2_58(2)) {
        jj_consume_token(MENOS);
        n2 = expr();
                                    datax+=n1+"-"+n2;
      } else {
        jj_consume_token(-1);
        throw new ParseException();
      }
    }
        if(datax==""){
            {if (true) return n1;}
        }else{
            {if (true) return datax;}
        }
    throw new Error("Missing return statement in function");
  }

  final public String ATT() throws ParseException {
    String n1;
    String n2;
    String datax="";
    n1 = AFF();
    label_7:
    while (true) {
      if (jj_2_59(2)) {
        ;
      } else {
        break label_7;
      }
      if (jj_2_60(2)) {
        jj_consume_token(POR);
        n2 = ATT();
                                   datax+=n1+"*"+n2;
      } else if (jj_2_61(2)) {
        jj_consume_token(DIV);
        n2 = ATT();
                                   datax+=n1+"/"+n2;
      } else {
        jj_consume_token(-1);
        throw new ParseException();
      }
    }
        if(datax==""){
            {if (true) return n1;}
        }else{
            {if (true) return datax;}
        }
    throw new Error("Missing return statement in function");
  }

  final public String AFF() throws ParseException {
    String n1;
    String n2;
    String datax="";
    n1 = unary();
    label_8:
    while (true) {
      if (jj_2_62(2)) {
        ;
      } else {
        break label_8;
      }
      jj_consume_token(POT);
      n2 = AFF();
                                  datax+=n1+"^"+n2;
    }
        if(datax==""){
            {if (true) return n1;}
        }else{
            {if (true) return datax;}
        }
    throw new Error("Missing return statement in function");
  }

  final public String unary() throws ParseException {
    String datax;
    String nodo;
    if (jj_2_63(2)) {
      jj_consume_token(MENOS);
      nodo = element();
                              datax= "-" +nodo;
    } else if (jj_2_64(2)) {
      datax = element();
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
                                                                       {if (true) return datax;}
    throw new Error("Missing return statement in function");
  }

  final public String element() throws ParseException {
    String datax="";
    if (jj_2_65(2)) {
      datax = DatoLiteral();
    } else if (jj_2_66(2)) {
      jj_consume_token(APAR);
      datax = Log_E();
      jj_consume_token(CPAR);
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
                                                               {if (true) return datax;}
    throw new Error("Missing return statement in function");
  }

  final public String DatoLiteral() throws ParseException {
                      String datax="";
    if (jj_2_67(2)) {
      datax = aceptoID();
    } else if (jj_2_68(2)) {
      datax = aceptoNumero();
    } else if (jj_2_69(2)) {
      datax = aceptoBooleano();
    } else if (jj_2_70(2)) {
      datax = aceptoString();
    } else if (jj_2_71(2)) {
      datax = aceptoFecha();
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
                            {if (true) return datax;}
    throw new Error("Missing return statement in function");
  }

  private boolean jj_2_1(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_1(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(0, xla); }
  }

  private boolean jj_2_2(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_2(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(1, xla); }
  }

  private boolean jj_2_3(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_3(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(2, xla); }
  }

  private boolean jj_2_4(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_4(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(3, xla); }
  }

  private boolean jj_2_5(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_5(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(4, xla); }
  }

  private boolean jj_2_6(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_6(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(5, xla); }
  }

  private boolean jj_2_7(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_7(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(6, xla); }
  }

  private boolean jj_2_8(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_8(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(7, xla); }
  }

  private boolean jj_2_9(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_9(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(8, xla); }
  }

  private boolean jj_2_10(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_10(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(9, xla); }
  }

  private boolean jj_2_11(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_11(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(10, xla); }
  }

  private boolean jj_2_12(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_12(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(11, xla); }
  }

  private boolean jj_2_13(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_13(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(12, xla); }
  }

  private boolean jj_2_14(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_14(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(13, xla); }
  }

  private boolean jj_2_15(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_15(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(14, xla); }
  }

  private boolean jj_2_16(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_16(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(15, xla); }
  }

  private boolean jj_2_17(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_17(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(16, xla); }
  }

  private boolean jj_2_18(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_18(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(17, xla); }
  }

  private boolean jj_2_19(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_19(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(18, xla); }
  }

  private boolean jj_2_20(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_20(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(19, xla); }
  }

  private boolean jj_2_21(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_21(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(20, xla); }
  }

  private boolean jj_2_22(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_22(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(21, xla); }
  }

  private boolean jj_2_23(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_23(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(22, xla); }
  }

  private boolean jj_2_24(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_24(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(23, xla); }
  }

  private boolean jj_2_25(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_25(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(24, xla); }
  }

  private boolean jj_2_26(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_26(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(25, xla); }
  }

  private boolean jj_2_27(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_27(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(26, xla); }
  }

  private boolean jj_2_28(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_28(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(27, xla); }
  }

  private boolean jj_2_29(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_29(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(28, xla); }
  }

  private boolean jj_2_30(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_30(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(29, xla); }
  }

  private boolean jj_2_31(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_31(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(30, xla); }
  }

  private boolean jj_2_32(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_32(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(31, xla); }
  }

  private boolean jj_2_33(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_33(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(32, xla); }
  }

  private boolean jj_2_34(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_34(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(33, xla); }
  }

  private boolean jj_2_35(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_35(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(34, xla); }
  }

  private boolean jj_2_36(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_36(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(35, xla); }
  }

  private boolean jj_2_37(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_37(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(36, xla); }
  }

  private boolean jj_2_38(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_38(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(37, xla); }
  }

  private boolean jj_2_39(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_39(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(38, xla); }
  }

  private boolean jj_2_40(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_40(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(39, xla); }
  }

  private boolean jj_2_41(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_41(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(40, xla); }
  }

  private boolean jj_2_42(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_42(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(41, xla); }
  }

  private boolean jj_2_43(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_43(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(42, xla); }
  }

  private boolean jj_2_44(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_44(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(43, xla); }
  }

  private boolean jj_2_45(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_45(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(44, xla); }
  }

  private boolean jj_2_46(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_46(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(45, xla); }
  }

  private boolean jj_2_47(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_47(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(46, xla); }
  }

  private boolean jj_2_48(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_48(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(47, xla); }
  }

  private boolean jj_2_49(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_49(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(48, xla); }
  }

  private boolean jj_2_50(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_50(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(49, xla); }
  }

  private boolean jj_2_51(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_51(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(50, xla); }
  }

  private boolean jj_2_52(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_52(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(51, xla); }
  }

  private boolean jj_2_53(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_53(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(52, xla); }
  }

  private boolean jj_2_54(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_54(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(53, xla); }
  }

  private boolean jj_2_55(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_55(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(54, xla); }
  }

  private boolean jj_2_56(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_56(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(55, xla); }
  }

  private boolean jj_2_57(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_57(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(56, xla); }
  }

  private boolean jj_2_58(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_58(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(57, xla); }
  }

  private boolean jj_2_59(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_59(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(58, xla); }
  }

  private boolean jj_2_60(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_60(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(59, xla); }
  }

  private boolean jj_2_61(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_61(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(60, xla); }
  }

  private boolean jj_2_62(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_62(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(61, xla); }
  }

  private boolean jj_2_63(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_63(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(62, xla); }
  }

  private boolean jj_2_64(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_64(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(63, xla); }
  }

  private boolean jj_2_65(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_65(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(64, xla); }
  }

  private boolean jj_2_66(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_66(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(65, xla); }
  }

  private boolean jj_2_67(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_67(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(66, xla); }
  }

  private boolean jj_2_68(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_68(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(67, xla); }
  }

  private boolean jj_2_69(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_69(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(68, xla); }
  }

  private boolean jj_2_70(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_70(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(69, xla); }
  }

  private boolean jj_2_71(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_71(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(70, xla); }
  }

  private boolean jj_3_13() {
    if (jj_scan_token(PREDETERMINADO)) return true;
    return false;
  }

  private boolean jj_3_12() {
    if (jj_scan_token(REQUERIDOMSN)) return true;
    return false;
  }

  private boolean jj_3_11() {
    if (jj_scan_token(REQUERIDO)) return true;
    return false;
  }

  private boolean jj_3_52() {
    if (jj_scan_token(MENQ)) return true;
    return false;
  }

  private boolean jj_3_10() {
    if (jj_scan_token(RESTRINGIRMSN)) return true;
    return false;
  }

  private boolean jj_3_9() {
    if (jj_scan_token(RESTRINGIR)) return true;
    return false;
  }

  private boolean jj_3_8() {
    if (jj_scan_token(CODIGO_POST)) return true;
    return false;
  }

  private boolean jj_3_7() {
    if (jj_scan_token(CODIGO_PRE)) return true;
    return false;
  }

  private boolean jj_3_6() {
    if (jj_scan_token(SUGERIR)) return true;
    return false;
  }

  private boolean jj_3R_19() {
    if (jj_3R_20()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_59()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3_5() {
    if (jj_scan_token(ETIQUETA)) return true;
    return false;
  }

  private boolean jj_3_4() {
    if (jj_scan_token(IDPREGUNTA)) return true;
    return false;
  }

  private boolean jj_3_3() {
    if (jj_scan_token(TIPO)) return true;
    return false;
  }

  private boolean jj_3R_10() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_3()) {
    jj_scanpos = xsp;
    if (jj_3_4()) {
    jj_scanpos = xsp;
    if (jj_3_5()) {
    jj_scanpos = xsp;
    if (jj_3_6()) {
    jj_scanpos = xsp;
    if (jj_3_7()) {
    jj_scanpos = xsp;
    if (jj_3_8()) {
    jj_scanpos = xsp;
    if (jj_3_9()) {
    jj_scanpos = xsp;
    if (jj_3_10()) {
    jj_scanpos = xsp;
    if (jj_3_11()) {
    jj_scanpos = xsp;
    if (jj_3_12()) {
    jj_scanpos = xsp;
    if (jj_3_13()) {
    jj_scanpos = xsp;
    if (jj_3_14()) {
    jj_scanpos = xsp;
    if (jj_3_15()) {
    jj_scanpos = xsp;
    if (jj_3_16()) {
    jj_scanpos = xsp;
    if (jj_3_17()) {
    jj_scanpos = xsp;
    if (jj_3_18()) {
    jj_scanpos = xsp;
    if (jj_3_19()) {
    jj_scanpos = xsp;
    if (jj_3_20()) return true;
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    return false;
  }

  private boolean jj_3_2() {
    if (jj_3R_10()) return true;
    if (jj_scan_token(SEPARADOR)) return true;
    return false;
  }

  private boolean jj_3_56() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_57()) {
    jj_scanpos = xsp;
    if (jj_3_58()) return true;
    }
    return false;
  }

  private boolean jj_3_57() {
    if (jj_scan_token(MAS)) return true;
    if (jj_3R_18()) return true;
    return false;
  }

  private boolean jj_3_58() {
    if (jj_scan_token(MENOS)) return true;
    if (jj_3R_18()) return true;
    return false;
  }

  private boolean jj_3R_26() {
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_2()) { jj_scanpos = xsp; break; }
    }
    if (jj_scan_token(PREGUNTA_CLOSE)) return true;
    return false;
  }

  private boolean jj_3_51() {
    if (jj_scan_token(DIF)) return true;
    return false;
  }

  private boolean jj_3R_9() {
    if (jj_scan_token(PREGUNTA_OPEN)) return true;
    if (jj_3R_26()) return true;
    return false;
  }

  private boolean jj_3_1() {
    if (jj_3R_9()) return true;
    return false;
  }

  private boolean jj_3R_18() {
    if (jj_3R_19()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_56()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3_50() {
    if (jj_scan_token(IG_IG)) return true;
    return false;
  }

  private boolean jj_3R_17() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_50()) {
    jj_scanpos = xsp;
    if (jj_3_51()) {
    jj_scanpos = xsp;
    if (jj_3_52()) {
    jj_scanpos = xsp;
    if (jj_3_53()) {
    jj_scanpos = xsp;
    if (jj_3_54()) {
    jj_scanpos = xsp;
    if (jj_3_55()) return true;
    }
    }
    }
    }
    }
    return false;
  }

  private boolean jj_3_49() {
    if (jj_3R_17()) return true;
    if (jj_3R_18()) return true;
    return false;
  }

  private boolean jj_3R_16() {
    if (jj_3R_18()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_49()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3_48() {
    if (jj_3R_16()) return true;
    return false;
  }

  private boolean jj_3_47() {
    if (jj_scan_token(NOT)) return true;
    if (jj_3R_12()) return true;
    return false;
  }

  private boolean jj_3R_27() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_47()) {
    jj_scanpos = xsp;
    if (jj_3_48()) return true;
    }
    return false;
  }

  private boolean jj_3_46() {
    if (jj_scan_token(AND)) return true;
    if (jj_3R_15()) return true;
    return false;
  }

  private boolean jj_3R_15() {
    if (jj_3R_27()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_46()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3_45() {
    if (jj_scan_token(OR)) return true;
    if (jj_3R_12()) return true;
    return false;
  }

  private boolean jj_3R_12() {
    if (jj_3R_15()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_45()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3_44() {
    if (jj_scan_token(PARAMETRO)) return true;
    return false;
  }

  private boolean jj_3_43() {
    if (jj_scan_token(APARIENCIA)) return true;
    return false;
  }

  private boolean jj_3_42() {
    if (jj_scan_token(MULTIMEDIA)) return true;
    return false;
  }

  private boolean jj_3_41() {
    if (jj_scan_token(REPETICION)) return true;
    return false;
  }

  private boolean jj_3_40() {
    if (jj_scan_token(CALCULO)) return true;
    return false;
  }

  private boolean jj_3_64() {
    if (jj_3R_21()) return true;
    return false;
  }

  private boolean jj_3_39() {
    if (jj_scan_token(LECTURA)) return true;
    return false;
  }

  private boolean jj_3_38() {
    if (jj_scan_token(APLICABLE)) return true;
    return false;
  }

  private boolean jj_3_37() {
    if (jj_scan_token(PREDETERMINADO)) return true;
    return false;
  }

  private boolean jj_3_36() {
    if (jj_scan_token(REQUERIDOMSN)) return true;
    return false;
  }

  private boolean jj_3_35() {
    if (jj_scan_token(REQUERIDO)) return true;
    return false;
  }

  private boolean jj_3_34() {
    if (jj_scan_token(RESTRINGIRMSN)) return true;
    return false;
  }

  private boolean jj_3_33() {
    if (jj_scan_token(RESTRINGIR)) return true;
    return false;
  }

  private boolean jj_3_32() {
    if (jj_scan_token(CODIGO_POST)) return true;
    return false;
  }

  private boolean jj_3_31() {
    if (jj_scan_token(CODIGO_PRE)) return true;
    return false;
  }

  private boolean jj_3_30() {
    if (jj_scan_token(SUGERIR)) return true;
    return false;
  }

  private boolean jj_3_29() {
    if (jj_scan_token(ETIQUETA)) return true;
    return false;
  }

  private boolean jj_3_28() {
    if (jj_scan_token(IDPREGUNTA)) return true;
    return false;
  }

  private boolean jj_3_66() {
    if (jj_scan_token(APAR)) return true;
    if (jj_3R_12()) return true;
    return false;
  }

  private boolean jj_3_27() {
    if (jj_scan_token(TIPO)) return true;
    return false;
  }

  private boolean jj_3R_25() {
    if (jj_scan_token(NUMBER)) return true;
    if (jj_scan_token(DIV)) return true;
    return false;
  }

  private boolean jj_3_25() {
    if (jj_3R_14()) return true;
    return false;
  }

  private boolean jj_3R_24() {
    if (jj_scan_token(BOOLEAN_LITERAL)) return true;
    return false;
  }

  private boolean jj_3_55() {
    if (jj_scan_token(MAYIQ)) return true;
    return false;
  }

  private boolean jj_3_71() {
    if (jj_3R_25()) return true;
    return false;
  }

  private boolean jj_3_70() {
    if (jj_3R_14()) return true;
    return false;
  }

  private boolean jj_3R_23() {
    if (jj_scan_token(NUMBER)) return true;
    return false;
  }

  private boolean jj_3_69() {
    if (jj_3R_24()) return true;
    return false;
  }

  private boolean jj_3_24() {
    if (jj_scan_token(CHA_R)) return true;
    return false;
  }

  private boolean jj_3_68() {
    if (jj_3R_23()) return true;
    return false;
  }

  private boolean jj_3_67() {
    if (jj_3R_13()) return true;
    return false;
  }

  private boolean jj_3R_22() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_67()) {
    jj_scanpos = xsp;
    if (jj_3_68()) {
    jj_scanpos = xsp;
    if (jj_3_69()) {
    jj_scanpos = xsp;
    if (jj_3_70()) {
    jj_scanpos = xsp;
    if (jj_3_71()) return true;
    }
    }
    }
    }
    return false;
  }

  private boolean jj_3R_14() {
    if (jj_scan_token(STRING)) return true;
    return false;
  }

  private boolean jj_3_22() {
    if (jj_3R_12()) return true;
    return false;
  }

  private boolean jj_3_65() {
    if (jj_3R_22()) return true;
    return false;
  }

  private boolean jj_3R_21() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_65()) {
    jj_scanpos = xsp;
    if (jj_3_66()) return true;
    }
    return false;
  }

  private boolean jj_3R_13() {
    if (jj_scan_token(ID)) return true;
    return false;
  }

  private boolean jj_3_54() {
    if (jj_scan_token(MAYQ)) return true;
    return false;
  }

  private boolean jj_3_26() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_23()) {
    jj_scanpos = xsp;
    if (jj_3_24()) {
    jj_scanpos = xsp;
    if (jj_3_25()) return true;
    }
    }
    return false;
  }

  private boolean jj_3_23() {
    if (jj_3R_13()) return true;
    return false;
  }

  private boolean jj_3R_11() {
    Token xsp;
    if (jj_3_26()) return true;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_26()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3_63() {
    if (jj_scan_token(MENOS)) return true;
    if (jj_3R_21()) return true;
    return false;
  }

  private boolean jj_3R_28() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_63()) {
    jj_scanpos = xsp;
    if (jj_3_64()) return true;
    }
    return false;
  }

  private boolean jj_3_62() {
    if (jj_scan_token(POT)) return true;
    if (jj_3R_20()) return true;
    return false;
  }

  private boolean jj_3_21() {
    if (jj_3R_11()) return true;
    return false;
  }

  private boolean jj_3_53() {
    if (jj_scan_token(MENIQ)) return true;
    return false;
  }

  private boolean jj_3R_20() {
    if (jj_3R_28()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_62()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3_20() {
    if (jj_scan_token(PARAMETRO)) return true;
    return false;
  }

  private boolean jj_3_19() {
    if (jj_scan_token(APARIENCIA)) return true;
    return false;
  }

  private boolean jj_3_18() {
    if (jj_scan_token(MULTIMEDIA)) return true;
    return false;
  }

  private boolean jj_3_17() {
    if (jj_scan_token(REPETICION)) return true;
    return false;
  }

  private boolean jj_3_59() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_60()) {
    jj_scanpos = xsp;
    if (jj_3_61()) return true;
    }
    return false;
  }

  private boolean jj_3_60() {
    if (jj_scan_token(POR)) return true;
    if (jj_3R_19()) return true;
    return false;
  }

  private boolean jj_3_61() {
    if (jj_scan_token(DIV)) return true;
    if (jj_3R_19()) return true;
    return false;
  }

  private boolean jj_3_16() {
    if (jj_scan_token(CALCULO)) return true;
    return false;
  }

  private boolean jj_3_15() {
    if (jj_scan_token(LECTURA)) return true;
    return false;
  }

  private boolean jj_3_14() {
    if (jj_scan_token(APLICABLE)) return true;
    return false;
  }

  /** Generated Token Manager. */
  public gramaticaTokenManager token_source;
  SimpleCharStream jj_input_stream;
  /** Current token. */
  public Token token;
  /** Next token. */
  public Token jj_nt;
  private int jj_ntk;
  private Token jj_scanpos, jj_lastpos;
  private int jj_la;
  private int jj_gen;
  final private int[] jj_la1 = new int[0];
  static private int[] jj_la1_0;
  static private int[] jj_la1_1;
  static private int[] jj_la1_2;
  static {
      jj_la1_init_0();
      jj_la1_init_1();
      jj_la1_init_2();
   }
   private static void jj_la1_init_0() {
      jj_la1_0 = new int[] {};
   }
   private static void jj_la1_init_1() {
      jj_la1_1 = new int[] {};
   }
   private static void jj_la1_init_2() {
      jj_la1_2 = new int[] {};
   }
  final private JJCalls[] jj_2_rtns = new JJCalls[71];
  private boolean jj_rescan = false;
  private int jj_gc = 0;

  /** Constructor with InputStream. */
  public gramatica(java.io.InputStream stream) {
     this(stream, null);
  }
  /** Constructor with InputStream and supplied encoding */
  public gramatica(java.io.InputStream stream, String encoding) {
    try { jj_input_stream = new SimpleCharStream(stream, encoding, 1, 1); } catch(java.io.UnsupportedEncodingException e) { throw new RuntimeException(e); }
    token_source = new gramaticaTokenManager(jj_input_stream);
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 0; i++) jj_la1[i] = -1;
    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Reinitialise. */
  public void ReInit(java.io.InputStream stream) {
     ReInit(stream, null);
  }
  /** Reinitialise. */
  public void ReInit(java.io.InputStream stream, String encoding) {
    try { jj_input_stream.ReInit(stream, encoding, 1, 1); } catch(java.io.UnsupportedEncodingException e) { throw new RuntimeException(e); }
    token_source.ReInit(jj_input_stream);
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 0; i++) jj_la1[i] = -1;
    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Constructor. */
  public gramatica(java.io.Reader stream) {
    jj_input_stream = new SimpleCharStream(stream, 1, 1);
    token_source = new gramaticaTokenManager(jj_input_stream);
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 0; i++) jj_la1[i] = -1;
    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Reinitialise. */
  public void ReInit(java.io.Reader stream) {
    jj_input_stream.ReInit(stream, 1, 1);
    token_source.ReInit(jj_input_stream);
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 0; i++) jj_la1[i] = -1;
    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Constructor with generated Token Manager. */
  public gramatica(gramaticaTokenManager tm) {
    token_source = tm;
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 0; i++) jj_la1[i] = -1;
    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Reinitialise. */
  public void ReInit(gramaticaTokenManager tm) {
    token_source = tm;
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 0; i++) jj_la1[i] = -1;
    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  private Token jj_consume_token(int kind) throws ParseException {
    Token oldToken;
    if ((oldToken = token).next != null) token = token.next;
    else token = token.next = token_source.getNextToken();
    jj_ntk = -1;
    if (token.kind == kind) {
      jj_gen++;
      if (++jj_gc > 100) {
        jj_gc = 0;
        for (int i = 0; i < jj_2_rtns.length; i++) {
          JJCalls c = jj_2_rtns[i];
          while (c != null) {
            if (c.gen < jj_gen) c.first = null;
            c = c.next;
          }
        }
      }
      return token;
    }
    token = oldToken;
    jj_kind = kind;
    throw generateParseException();
  }

  static private final class LookaheadSuccess extends java.lang.Error { }
  final private LookaheadSuccess jj_ls = new LookaheadSuccess();
  private boolean jj_scan_token(int kind) {
    if (jj_scanpos == jj_lastpos) {
      jj_la--;
      if (jj_scanpos.next == null) {
        jj_lastpos = jj_scanpos = jj_scanpos.next = token_source.getNextToken();
      } else {
        jj_lastpos = jj_scanpos = jj_scanpos.next;
      }
    } else {
      jj_scanpos = jj_scanpos.next;
    }
    if (jj_rescan) {
      int i = 0; Token tok = token;
      while (tok != null && tok != jj_scanpos) { i++; tok = tok.next; }
      if (tok != null) jj_add_error_token(kind, i);
    }
    if (jj_scanpos.kind != kind) return true;
    if (jj_la == 0 && jj_scanpos == jj_lastpos) throw jj_ls;
    return false;
  }


/** Get the next Token. */
  final public Token getNextToken() {
    if (token.next != null) token = token.next;
    else token = token.next = token_source.getNextToken();
    jj_ntk = -1;
    jj_gen++;
    return token;
  }

/** Get the specific Token. */
  final public Token getToken(int index) {
    Token t = token;
    for (int i = 0; i < index; i++) {
      if (t.next != null) t = t.next;
      else t = t.next = token_source.getNextToken();
    }
    return t;
  }

  private int jj_ntk() {
    if ((jj_nt=token.next) == null)
      return (jj_ntk = (token.next=token_source.getNextToken()).kind);
    else
      return (jj_ntk = jj_nt.kind);
  }

  private java.util.List<int[]> jj_expentries = new java.util.ArrayList<int[]>();
  private int[] jj_expentry;
  private int jj_kind = -1;
  private int[] jj_lasttokens = new int[100];
  private int jj_endpos;

  private void jj_add_error_token(int kind, int pos) {
    if (pos >= 100) return;
    if (pos == jj_endpos + 1) {
      jj_lasttokens[jj_endpos++] = kind;
    } else if (jj_endpos != 0) {
      jj_expentry = new int[jj_endpos];
      for (int i = 0; i < jj_endpos; i++) {
        jj_expentry[i] = jj_lasttokens[i];
      }
      boolean exists = false;
      for (java.util.Iterator<?> it = jj_expentries.iterator(); it.hasNext();) {
        exists = true;
        int[] oldentry = (int[])(it.next());
        if (oldentry.length == jj_expentry.length) {
          for (int i = 0; i < jj_expentry.length; i++) {
            if (oldentry[i] != jj_expentry[i]) {
              exists = false;
              break;
            }
          }
          if (exists) break;
        }
      }
      if (!exists) jj_expentries.add(jj_expentry);
      if (pos != 0) jj_lasttokens[(jj_endpos = pos) - 1] = kind;
    }
  }

  /** Generate ParseException. */
  public ParseException generateParseException() {
    jj_expentries.clear();
    boolean[] la1tokens = new boolean[70];
    if (jj_kind >= 0) {
      la1tokens[jj_kind] = true;
      jj_kind = -1;
    }
    for (int i = 0; i < 0; i++) {
      if (jj_la1[i] == jj_gen) {
        for (int j = 0; j < 32; j++) {
          if ((jj_la1_0[i] & (1<<j)) != 0) {
            la1tokens[j] = true;
          }
          if ((jj_la1_1[i] & (1<<j)) != 0) {
            la1tokens[32+j] = true;
          }
          if ((jj_la1_2[i] & (1<<j)) != 0) {
            la1tokens[64+j] = true;
          }
        }
      }
    }
    for (int i = 0; i < 70; i++) {
      if (la1tokens[i]) {
        jj_expentry = new int[1];
        jj_expentry[0] = i;
        jj_expentries.add(jj_expentry);
      }
    }
    jj_endpos = 0;
    jj_rescan_token();
    jj_add_error_token(0, 0);
    int[][] exptokseq = new int[jj_expentries.size()][];
    for (int i = 0; i < jj_expentries.size(); i++) {
      exptokseq[i] = jj_expentries.get(i);
    }
    return new ParseException(token, exptokseq, tokenImage);
  }

  /** Enable tracing. */
  final public void enable_tracing() {
  }

  /** Disable tracing. */
  final public void disable_tracing() {
  }

  private void jj_rescan_token() {
    jj_rescan = true;
    for (int i = 0; i < 71; i++) {
    try {
      JJCalls p = jj_2_rtns[i];
      do {
        if (p.gen > jj_gen) {
          jj_la = p.arg; jj_lastpos = jj_scanpos = p.first;
          switch (i) {
            case 0: jj_3_1(); break;
            case 1: jj_3_2(); break;
            case 2: jj_3_3(); break;
            case 3: jj_3_4(); break;
            case 4: jj_3_5(); break;
            case 5: jj_3_6(); break;
            case 6: jj_3_7(); break;
            case 7: jj_3_8(); break;
            case 8: jj_3_9(); break;
            case 9: jj_3_10(); break;
            case 10: jj_3_11(); break;
            case 11: jj_3_12(); break;
            case 12: jj_3_13(); break;
            case 13: jj_3_14(); break;
            case 14: jj_3_15(); break;
            case 15: jj_3_16(); break;
            case 16: jj_3_17(); break;
            case 17: jj_3_18(); break;
            case 18: jj_3_19(); break;
            case 19: jj_3_20(); break;
            case 20: jj_3_21(); break;
            case 21: jj_3_22(); break;
            case 22: jj_3_23(); break;
            case 23: jj_3_24(); break;
            case 24: jj_3_25(); break;
            case 25: jj_3_26(); break;
            case 26: jj_3_27(); break;
            case 27: jj_3_28(); break;
            case 28: jj_3_29(); break;
            case 29: jj_3_30(); break;
            case 30: jj_3_31(); break;
            case 31: jj_3_32(); break;
            case 32: jj_3_33(); break;
            case 33: jj_3_34(); break;
            case 34: jj_3_35(); break;
            case 35: jj_3_36(); break;
            case 36: jj_3_37(); break;
            case 37: jj_3_38(); break;
            case 38: jj_3_39(); break;
            case 39: jj_3_40(); break;
            case 40: jj_3_41(); break;
            case 41: jj_3_42(); break;
            case 42: jj_3_43(); break;
            case 43: jj_3_44(); break;
            case 44: jj_3_45(); break;
            case 45: jj_3_46(); break;
            case 46: jj_3_47(); break;
            case 47: jj_3_48(); break;
            case 48: jj_3_49(); break;
            case 49: jj_3_50(); break;
            case 50: jj_3_51(); break;
            case 51: jj_3_52(); break;
            case 52: jj_3_53(); break;
            case 53: jj_3_54(); break;
            case 54: jj_3_55(); break;
            case 55: jj_3_56(); break;
            case 56: jj_3_57(); break;
            case 57: jj_3_58(); break;
            case 58: jj_3_59(); break;
            case 59: jj_3_60(); break;
            case 60: jj_3_61(); break;
            case 61: jj_3_62(); break;
            case 62: jj_3_63(); break;
            case 63: jj_3_64(); break;
            case 64: jj_3_65(); break;
            case 65: jj_3_66(); break;
            case 66: jj_3_67(); break;
            case 67: jj_3_68(); break;
            case 68: jj_3_69(); break;
            case 69: jj_3_70(); break;
            case 70: jj_3_71(); break;
          }
        }
        p = p.next;
      } while (p != null);
      } catch(LookaheadSuccess ls) { }
    }
    jj_rescan = false;
  }

  private void jj_save(int index, int xla) {
    JJCalls p = jj_2_rtns[index];
    while (p.gen > jj_gen) {
      if (p.next == null) { p = p.next = new JJCalls(); break; }
      p = p.next;
    }
    p.gen = jj_gen + xla - jj_la; p.first = token; p.arg = xla;
  }

  static final class JJCalls {
    int gen;
    Token first;
    int arg;
    JJCalls next;
  }

}
