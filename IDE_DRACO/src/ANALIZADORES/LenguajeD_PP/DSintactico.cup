package ANALIZADORES.LenguajeD_PP; 
import java_cup.runtime.*;

import java.util.*;
import ESTRUCTURAS.*;

action code {:
    public int Index=1;
    public Nodo root;  
:}


parser code {:
    
    public void syntax_error(Symbol s){
        System.err.println("Error en la LÃ­nea " + (s.right+1) +" Columna "+(s.left+1)+ ". Identificador "
        +s.value + " no reconocido." );
        //Inicio.reporteError.agregar("Sintactico",s.right+1,s.left+1,"Identificador "+s.value+" no reconocido");
    }
    
    public Nodo getRoot(){
        return action_obj.root;
    }
:}


terminal token STRING_LITERAL,NUM_LITERAL,DECIMAL_LITERAL,ID,MAS,MENOS,POR,DIV,POT,INC,DEC,
APAR,CPAR,ALLA,CLLA,ACORCH,CCORCH,COMA,PYC,DSPTS,IGUAL,IG_IG,MENQ,MENIQ,MAYQ,MAYIQ,DIF,OR,AND,NOT,CADENA,
CARACTER,ENTERO,DECIMAL,BOOLEANO,FALSO,VERDADERO,ESTRUCT,NULO,

PTO,SIGNO_Q,SI,SINO,MIENTRAS,PARA,DETENER,
CONTINUAR,RETORNAR,IMPRIMIR,VACIO,PRINCIPAL,
PUNTO, CUADRADO, OVALO, LINEA;

non terminal Nodo inicio,tipo_dato,lista_id,asignacion_var,expl,expr,expa,dato,
                  cuerpo_documento,contenido_cuerpo,declaraciones,declaracion_variable,
                  asignacion,indices,indice,valores_arreglo,una_dimension,
                  lista_valores,declaracion_estructura,cuerpo_estructura,miembros,
                  
                  Acceso,AccesoRecursivo,tipoAcceso,llamada,Lista_ValParams,
                  ValParams,MuchasSentencias,Sentencias,Sentencia, 

                  Sent_Ternario,Sent_Si,final_si,muchos_sino_si,
                  sino_si,sino,

                  Sent_Mientras,Sent_Para,Inicializacion,Actualizacion,
                  Simplificada,Sent_Detener,Sent_Continuar,
                  Sent_Retornar,Sent_Imprimir,Metodo,Lista_Parametros,
                  Muchos_SimArr,SimArr,Parametros,
                  Parametro,AccesoArray,MuchosIndices,Pintar_Punto,
                  Pintar_Cuadrado,Pintar_Ovalo,Pintar_Cadena,Pintar_Linea,Funciones_Nativas;


precedence left MAS, MENOS;
precedence left POR, DIV;
precedence left POT;
precedence left APAR,CPAR;
precedence left IG_IG,MENQ,MENIQ,MAYQ,MAYIQ,DIF;

precedence left OR;
precedence left AND;
precedence left NOT;

precedence left SIGNO_Q;

start with inicio;


inicio ::= cuerpo_documento;

//------------------------------------------------------------------------------
cuerpo_documento ::={::} 
                    |contenido_cuerpo;
//------------------------------------------------------------------------------


//------------------------------------------------------------------------------
contenido_cuerpo ::= contenido_cuerpo declaraciones
                    |declaraciones;
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
declaraciones   ::= declaracion_variable
                    
                    |declaracion_estructura
                    |asignacion
                    |Metodo
                    |Acceso PYC
                    |Simplificada PYC
                    |Funciones_Nativas PYC;
//------------------------------------------------------------------------------


//------------------------------------------------------------------------------
declaracion_estructura ::= ESTRUCT ID  ALLA cuerpo_estructura CLLA ;



cuerpo_estructura      ::= cuerpo_estructura miembros
                          |miembros;


miembros               ::= declaracion_variable
                           |asignacion;


//------------------------------------------------------------------------------
asignacion      ::= Acceso IGUAL expl PYC;
//------------------------------------------------------------------------------


//------------------------------------------------------------------------------
declaracion_variable ::= tipo_dato lista_id MuchosIndices asignacion_var PYC
                        |ID        lista_id MuchosIndices asignacion_var PYC;
                        
//------------------------------------------------------------------------------


//------------------------------------------------------------------------------
indices ::= indices indice
           |indice;

indice  ::= ACORCH expl CCORCH;
//------------------------------------------------------------------------------




//------------------------------------------------------------------------------
valores_arreglo   ::= una_dimension;


una_dimension     ::= ALLA lista_valores CLLA;

lista_valores     ::= lista_valores COMA expl
                      |expl;
//------------------------------------------------------------------------------



//------------------------------------------------------------------------------
tipo_dato ::= ENTERO | DECIMAL | CARACTER | BOOLEANO | CADENA ;
//------------------------------------------------------------------------------


  
//------------------------------------------------------------------------------
lista_id ::= lista_id COMA ID
            |ID;
//------------------------------------------------------------------------------



//------------------------------------------------------------------------------
asignacion_var       ::= {::}
                        |IGUAL expl; 
//------------------------------------------------------------------------------


//---------------------------EXPRESIONES LOGICAS--------------------------------
expl ::= Sent_Ternario
        |expl AND expl
        |expl OR expl
        |NOT expl
        |expr;
//------------------------------------------------------------------------------

//---------------------------EXPRESIONES RELACIONALES---------------------------
expr ::= expa IG_IG expa
        |expa DIF   expa
        |expa MENQ expa
        |expa MENIQ expa
        |expa MAYQ expa
        |expa MAYIQ expa
        |expa;
//------------------------------------------------------------------------------


//---------------------------EXPRESIONES ARITMETICAS----------------------------
expa ::= expa MAS expa
        |expa MENOS expa
        |expa POR expa
        |expa DIV expa
        |expa POT expa
        |MENOS expa
        |APAR expl CPAR
        |dato
        |valores_arreglo
        |Acceso;
//------------------------------------------------------------------------------


//------------------------------------------------------------------------------
dato ::= STRING_LITERAL
        |NUM_LITERAL
        |DECIMAL_LITERAL
        |VERDADERO
        |FALSO
        |NULO;
//------------------------------------------------------------------------------



//================================Acceso========================================
Acceso      ::= AccesoRecursivo;


AccesoRecursivo   ::= AccesoRecursivo PTO tipoAcceso
                    |tipoAcceso;

tipoAcceso        ::= llamada
                     |AccesoArray
                     |ID;

AccesoArray       ::= ID indices;


//==============================================================================


//================================LLAMADA METODO================================
llamada           ::= ID APAR    Lista_ValParams     CPAR MuchosIndices; 


MuchosIndices     ::={::}
                    |indices;
//==============================================================================



//================================Lista Valores Parametros =====================
Lista_ValParams   ::= {::}
                      |ValParams;

ValParams         ::= ValParams COMA expl
                      |expl;
//==============================================================================






//################################SENTENCIAS CONTROL############################

Sent_Ternario    ::= expl SIGNO_Q  expl  DSPTS  expl;

//==================================SI==========================================
Sent_Si          ::= SI APAR expl CPAR ALLA MuchasSentencias CLLA final_si;

final_si         ::= {::}
                     |muchos_sino_si sino
                     |sino;

//------------------------------------------------------------------------------
muchos_sino_si   ::= muchos_sino_si sino_si
                    |sino_si;

sino_si          ::= SINO SI APAR expl CPAR ALLA MuchasSentencias CLLA;
//------------------------------------------------------------------------------

sino             ::= SINO ALLA MuchasSentencias CLLA;
 
//==============================================================================





//==================================MIENTRAS====================================
Sent_Mientras    ::= MIENTRAS APAR  expl  CPAR  ALLA MuchasSentencias CLLA;
//==============================================================================



//==================================PARA========================================
Sent_Para       ::= PARA APAR  Inicializacion PYC expl PYC Actualizacion  CPAR  ALLA MuchasSentencias CLLA;

Inicializacion  ::= ENTERO ID  IGUAL expl
                   |ID IGUAL expl;

Actualizacion   ::= Simplificada;
//==============================================================================



//================================SIMPLIFICADA==================================
Simplificada    ::= Acceso INC
                   |Acceso DEC;
//==============================================================================




//================================DETENER=======================================
Sent_Detener    ::= DETENER          PYC;
//==============================================================================



//================================CONTINUAR-====================================
Sent_Continuar    ::= CONTINUAR      PYC;
//==============================================================================



//================================RETORNAR======================================
Sent_Retornar    ::= RETORNAR       PYC
                     |RETORNAR expl  PYC;
//==============================================================================




//================================IMPRIMIR======================================
Sent_Imprimir    ::= IMPRIMIR APAR expl CPAR PYC;
//==============================================================================




//================================MuchasSentencias==============================
MuchasSentencias    ::= {::}
                       |Sentencias;

Sentencias          ::= Sentencias Sentencia
                        |Sentencia;


Sentencia           ::=  Sent_Si
                        |Sent_Mientras
                        |Sent_Para
                        |Sent_Detener
                        |Sent_Continuar
                        |Sent_Retornar
                        |Sent_Imprimir
                        |asignacion
                        |Acceso PYC
                        |Simplificada PYC
                        |declaracion_variable
                        |Funciones_Nativas PYC;
//==============================================================================



//================================Declaracion Metodos===========================
Metodo          ::= VACIO                        ID     APAR Lista_Parametros CPAR ALLA MuchasSentencias CLLA

                    |tipo_dato   Muchos_SimArr   ID   APAR Lista_Parametros CPAR ALLA MuchasSentencias CLLA


                    |ID          Muchos_SimArr   ID   APAR Lista_Parametros CPAR ALLA MuchasSentencias CLLA
                
                    |tipo_dato                   ID   APAR Lista_Parametros CPAR ALLA MuchasSentencias CLLA


                    |ID                          ID   APAR Lista_Parametros CPAR ALLA MuchasSentencias CLLA
                

                    |VACIO PRINCIPAL APAR CPAR    ALLA MuchasSentencias  CLLA;




Muchos_SimArr        ::= Muchos_SimArr SimArr
                       |SimArr;

SimArr             ::= ACORCH CCORCH;
//==============================================================================




//================================Lista Parametros =============================
Lista_Parametros   ::= {::}
                      |Parametros;

Parametros         ::= Parametros COMA Parametro
                      |Parametro;


Parametro          ::= tipo_dato Muchos_SimArr  ID
                      |ID        Muchos_SimArr  ID ;
                      
//==============================================================================


//================================Funciones NATIVAS=============================


Funciones_Nativas  ::= Pintar_Cadena | Pintar_Punto | Pintar_Cuadrado | Pintar_Ovalo  |  Pintar_Linea;

Pintar_Punto       ::= PUNTO    APAR ValParams   CPAR;

Pintar_Cuadrado    ::= CUADRADO APAR ValParams   CPAR;

Pintar_Ovalo       ::= OVALO APAR ValParams   CPAR;

Pintar_Cadena      ::= CADENA APAR ValParams   CPAR;

Pintar_Linea       ::= LINEA    APAR ValParams   CPAR;
//==============================================================================

